@model List<JobPosting>

@{
    ViewData["Title"] = "Deine Inserate";
}

<a class="btn btn-primary" asp-controller="JobPosting" asp-action="CreateEditJobPosting"> Neues Inserat anlegen</a>

<hr />
<table id="jobPostingTable" class="table table-bordered table-striped table-hover">
    <thead>
        <tr>
            <th>
                Job Titel
            </th>
            <th>
                Ort
            </th>
            <th>
                Firmenname
            </th>
            <th>
                Aktionen
            </th>
        </tr>
    </thead>

    <tbody>
        @{
            foreach (JobPosting jobPosting in Model)
            {
                <tr>
                    <td>
                        @jobPosting.JobTitle
                    </td>
                    <td>
                        @jobPosting.JobLocation
                    </td>
                    <td>
                        @jobPosting.CompanyName
                    </td>
                    <td>
                        <a asp-route-id="@jobPosting.Id" asp-controller="JobPosting" asp-action="CreateEditJobPosting" class="btn btn-warning">Edit</a>
                        <button onclick="onClickedDeleteButton(@jobPosting.Id)" class="btn btn-danger">Löschen</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@section Scripts {
    <script>
        debugger;
        $(document).ready(function () {
            $('#jobPostingTable').DataTable();
        });

        function onClickedDeleteButton(id) {
            debugger;
            Swal.fire({
                title: 'Möchtest du das Inserat wirklich löschen?',
                icon: 'error',
                showCloseButton: true,
                focusConfirm: false,
                confirmButtonText:
                    'Ja, löschen'
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) 
                {

                    //Backend call to delete job posting by Id
                    // Ajax: Asynchronous javascript calls is the best option
                    $.ajax
                        ({
                            // Method vom Type POST:
                            type: "POST",
                            url: "@Url.Action("DeleteJobPostingById")",
                            data: { id: id }, // der erste id ist der frei wählbare Name, der zweite id ist der Parameter
                            success: function (msg) {
                                Swal.fire('Wurde gelöscht', '', 'success').then((result) => {
                                    location.reload();
                                })
                            },
                            error: function (msg) {
                                Swal.fire('Ups, etwas ist schiefgelaufen', '', 'error')
                            }
                        });
                }
            })
        }
    </script>
}